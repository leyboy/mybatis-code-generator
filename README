该项目是mybatis-generator专门用来生成generatorConfig.xml的,使用该工具只需要通过简便的配置,就可以生成
mybatis-generator的配置文件,现如今支持mysql,只适合maven项目.在codeGeneratorJar中含有本项目生成的可执行jar包
//项目特色:
a:只需要比mybatis-generator的配置文件更少的配置,即可帮助生成mybatis-generator的配置文件
b:从类路径下加载资源抽象ClasspathProperties,将类路径下的资源加载进java.util.Properties
c:commons-io包下FileUtils的运用,能够很好的操作文件,流等等
d:AbstractBeanUtils,主要用来将类路径下的资源读取到Bean来进行初始化Bean
e:Velocity的封装
例如VelocityUtils,VelocityCallback,VelocityTemplateHandler


(1):使用如下:
//配置datasource.properties:配置数据库连接:
例如:如果你在src/main/resource下建立一个datasource.properties,示例配置如下:

//配置mybatis-generator的必要属性:
例如:如果你在src/main/resource建立一个code-generator.properties,示例配置如下:
#code generator properties

#生成模型的包名
javaModelGenerator.targetPackage=com.ley.springboot.mybatis.entity

#生成映射文件的包名
sqlMapGenerator.targetPackage=com.ley.springboot.mybatis.mapper

#生成dao文件的包名
javaClientGenerator.targetPackage=com.ley.springboot.mybatis.dao

#表明的前缀,当有表名前缀的时候,生成实体类时可以去掉表名前缀,默认是TB_
#含有配置的前缀,生成实体类时都可以去掉表名前缀
tablePrefix=TB_

//生成generatorConfig.xml文件:
调用:com.ley.mybatis.code.generator.utils.generateMybatisGeneratorConfigXML(String datasourceResource,
String mybatisGeneratorResource,String generateXMLLocation)
-->参数1:数据库连接配置文件(相对于类路径)
-->参数2:mybatis generator resource配置文件路径(相对于类路径)
-->参数3:generatorXMLLocation:generator xml location(建议为null,生成完在项目的根目录)
//调用示例:
CodeUtils.generateMybatisGeneratorConfigXML("datasource.properties","config/code-generator.properties",null);
//datasource.properties在src/main/resource/datasource.properties
//code-generator.propreties在src/main/resource/config/code-generator/properties


//使用mybatis-generator插件:
a:在pom.xml添加mybatis-generator插件:
<plugins>
    <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>1.3.2</version>
        <configuration>
            <configurationFile>generatorConfig.xml</configurationFile>
            <verbose>true</verbose>
            <overwrite>true</overwrite>
        </configuration>
        <executions>
            <execution>
                <id>Generate MyBatis Artifacts</id>
                <goals>
                    <goal>generate</goal>
                </goals>
            </execution>
        </executions>
        <dependencies>
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.41</version>
                <scope>runtime</scope>
            </dependency>
        </dependencies>
    </plugin>
</plugins>

b:使用:
//配置的generatorConfig.xml的targetPackage要事先存在
//如果是idea环境:
maven project按钮-->mybatis-generator->mybatis-generator:generate-->运行
//如果是eclipse环境:
Run AS——>Maven Build… ——>在Goals框中输入：mybatis-generator:generate，maven会先下载插件